[user]
	email = Blue.Yuan@morningstar.com
	name = Yijun "Blue" Yuan
[credential "https://msstash.morningstar.com"]
	username = byuan
[color]
	ui = auto
	branch = always
	diff = always
	status = always
[github]
	user = bbbush
[push]
	default = simple
[core]
	autocrlf = true
	ignorecase = true
	filemode = false
	whitespace = trailing-space,space-before-tab
	excludesfile = '~/.gitignore_global'
	longpaths = true
	symlinks = true
	fscache = true
[apply]
	whitespace = fix
[gui]
	encoding = utf-8
	fontdiff = -family Consolas -size 10 -weight normal -slant roman -underline 0 -overstrike 0
[alias]
  new = "!_() { git log $1@{1}..$1@{0} \"$@\"; }; _"
  k = "!_() { gitk \"$@\"; }; _"
  exists = "!_() { \
	git rev-parse --verify -q $1 > /dev/null; \
	}; _"
  psbin = "!_() { \
	if ! b=$(git symbolic-ref --short -q HEAD); then b=$1; fi; \
	if ! git exists psbin/$b; then git fetch psbin; fi; \
	if ! git exists psbin/$b; then b=$1; fi; \
	git overwrite psbin/$b; \
	git dllx; \
	}; _"
  overwrite = "!_() { \
	if git exists $1; then \
		git archive $1 | tar xf -; \
	else \
		>&2 echo branch $1 does not exist; \
	fi; \
	}; _"
  dllx = "!_() { \
	find . -type f -a \\( -name *.dll -o -name *.exe \\) -print0 | \
	xargs -0 chmod +x; \
	}; _"
  addiw = "!_() { \
	git diff -w --no-color \"$@\" | \
	git apply --cached --ignore-whitespace; \
	}; _"
  csproj = "!_() { \
	git diff --name-status \"$@\" | \
		grep -v ^D | \
		grep '[.]\\(csproj\\)\\|\\(svcmap\\)$' | \
		cut -c3- | \
	while read -r f; do \
		if [[ `tail -c2 \"$f\"` = `echo -e '\\r\\n'` ]] ; then \
			echo \"update $f\"; \
			sed 's/\\r//g' \"$f\" | \
			awk '{if (NR>1) printf(\"\\r\\n\"); printf(\"%s\",$0)}' > .tmp~ && \
			mv .tmp~ \"$f\" \
		fi; \
	done; \
	}; _"
  pr = "!_() { \
	git pull origin refs/pull-requests/\"$1\"/from; \
  }; _"
  fetch-pr ="!_() {\
	git fetch origin refs/pull-requests/\"$1\"/from; \
  }; _"
[url "https://"]
	insteadOf = git://
[commit]
	verbose = true
[branch]
	sort = -authordate
[credential]
	helper = manager
[log]
	date = auto:human
[fs]
	cache = true
[status]
	submoduleSummary = false
[protocol]
	version = 2
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[maintenance]
	repo = C:/Worktrees/DATAAPI/dyncalc
